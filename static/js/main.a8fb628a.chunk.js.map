{"version":3,"sources":["components/EmployeesBirthday/employeesBirthday.module.css","requests/localStorage.ts","resux-state/userReducer.ts","resux-state/dataGenerator.ts","resux-state/birthdayReducer.ts","resux-state/store.ts","requests/api.ts","resux-state/userActions.ts","components/Employees/Employee.tsx","resux-state/birthdayActions.ts","components/Employees/Employees.tsx","components/Employees/EmployeesContainer.tsx","components/EmployeesBirthday/EmployeeBirthday.tsx","components/EmployeesBirthday/EmployeesBirthday.tsx","components/EmployeesBirthday/EmployeesBirthdayContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Employees/employee.module.css"],"names":["module","exports","pointedUsers","restoreState","key","usersAsString","localStorage","getItem","JSON","parse","saveState","user","allUsers","push","setItem","stringify","deleteElemInLC","filter","x","id","initialState","users","dataGenerator","result","dictionary","i","String","fromCharCode","storageUsers","forEach","isChecked","some","y","lastName","months","dataMonthsGenerator","monthsDictionary","m","getMonth","dob","userBirthday","d","Date","usersBirthday","reducers","combineReducers","state","action","type","newUserState","letterBox","monthName","newBirthdayState","monthName2","u","store","createStore","applyMiddleware","thunkMiddleware","instance","axios","create","baseURL","headers","usersAPI","get","then","res","data","usersActions","Employee","onChangeCheckBox","className","styles","employee_container","firstName","onChange","checked","usersBirthdayActions","Employees","userBox","dispatch","useDispatch","boxName","employees_container","style","fontWeight","backgroundColor","length","map","EmployeesContainer","useSelector","employees_wrapper","head_style","basic_container","display","Object","entries","EmployeeBirthday","year","slice","month","date","dateOfBirth","width","padding","EmployeesBirthday","month_box","birthday_box","EmployeesBirthdayContainer","setEmpl","find","color","fontSize","App","useEffect","a","AppGlobal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8fb628a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"month_box\":\"employeesBirthday_month_box__1Q1CH\",\"birthday_box\":\"employeesBirthday_birthday_box__1f_WN\"};","import { IUser } from \"../resux-state/userReducer\";\n\nexport const pointedUsers = \"pointedUsers\";\n\nexport const restoreState = (key: string) => {\n  let usersAsString = localStorage.getItem(key);\n  if (usersAsString) {\n    return JSON.parse(usersAsString);\n  }\n};\n\nexport const saveState = (key: string, user: IUser) => {\n  let usersAsString = localStorage.getItem(\"pointedUsers\");\n  if (usersAsString) {\n    const allUsers: Array<IUser> = JSON.parse(usersAsString);\n    allUsers.push(user);\n    localStorage.setItem(key, JSON.stringify(allUsers));\n  } else {\n    const allUsers: Array<IUser> = [user];\n    localStorage.setItem(key, JSON.stringify(allUsers));\n  }\n};\n\nexport const deleteElemInLC = (key: string, user: IUser) => {\n  let usersAsString = localStorage.getItem(pointedUsers);\n  if (usersAsString) {\n    const allUsers: Array<IUser> = JSON.parse(usersAsString);\n    localStorage.setItem(\n      key,\n      JSON.stringify(allUsers.filter((x) => x.id !== user.id))\n    );\n  }\n};\n","import { Dictionary } from \"./dataGenerator\";\nimport { usersActionsType } from \"./userActions\";\nimport {\n  deleteElemInLC,\n  pointedUsers,\n  saveState,\n} from \"../requests/localStorage\";\n\nexport type initialStateType = typeof initialState;\nconst initialState = {\n  users: {} as Dictionary<Array<IUser>>,\n};\n\nexport const usersReducer = (\n  state = initialState,\n  action: usersActionsType\n): initialStateType => {\n  switch (action.type) {\n    case \"usersReducer/GET_USERS\":\n      return {\n        ...state,\n        users: { ...action.users },\n      };\n    case \"usersReducer/CHANGE_USER_IS_CHECKED\":\n      let newUserState = { ...state.users };\n      newUserState[action.letterBox].forEach((x) => {\n        if (x.id === action.user.id) {\n          x.isChecked = !x.isChecked;\n          if (x.isChecked) {\n            saveState(pointedUsers, action.user);\n          } else {\n            deleteElemInLC(pointedUsers, action.user);\n          }\n        }\n      });\n      return {\n        ...state,\n        users: newUserState,\n      };\n  }\n  return state;\n};\n\nexport interface IUser {\n  id: string;\n  firstName: string;\n  lastName: string;\n  dob: string;\n  isChecked: boolean;\n}\n","import {IUser} from \"./userReducer\";\nimport {pointedUsers, restoreState} from \"../requests/localStorage\";\n\nexport interface Dictionary<T> {\n    [Key: string]: T;\n}\n\nexport const dataGenerator = (result: Array<IUser>) => {\n    const dictionary: Dictionary<Array<IUser>> = {};\n    for (let i = 65; i < 91; i++) {\n        dictionary[String.fromCharCode(i)] = [];\n    }\n    const storageUsers: Array<IUser> = restoreState(pointedUsers);\n    result.forEach((x) => {\n        if (storageUsers) {\n            x.isChecked = storageUsers.some((y) => y.id === x.id);\n        } else {\n            x.isChecked = false;\n        }\n        dictionary[x.lastName[0]].push(x);\n    });\n    return dictionary;\n};\n\n\nconst months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\n\nexport const dataMonthsGenerator = () => {\n    const monthsDictionary: Dictionary<Array<IUser>> = {};\n    months.forEach((m) => (monthsDictionary[m] = []));\n    const storageUsers: Array<IUser> = restoreState(pointedUsers);\n    storageUsers.forEach((x) => monthsDictionary[getMonth(x.dob)].push(x));\n    return monthsDictionary;\n};\n\nexport const getMonth = (userBirthday: string) => {\n    let d = new Date(userBirthday);\n    return  months[d.getMonth()];\n};\n\n","import { Dictionary, getMonth } from \"./dataGenerator\";\nimport { usersBirthdayActionsType } from \"./birthdayActions\";\nimport { IUser } from \"./userReducer\";\n\nexport type initialStateType = typeof initialState;\nconst initialState = {\n  usersBirthday: {} as Dictionary<Array<IUser>>,\n};\n\nexport const birthdayReducer = (\n  state = initialState,\n  action: usersBirthdayActionsType\n): initialStateType => {\n  switch (action.type) {\n    case \"usersBirthdayReducer/GET_MONTH\":\n      return {\n        ...state,\n        usersBirthday: { ...action.usersBirthday },\n      };\n    case \"usersBirthdayReducer/SET_USER_BIRTHDAY\": {\n      const monthName = getMonth(action.user.dob);\n      const newBirthdayState = { ...state.usersBirthday };\n      newBirthdayState[monthName].push(action.user);\n      return {\n        ...state,\n        usersBirthday: newBirthdayState,\n      };\n    }\n    case \"usersBirthdayReducer/REMOVE_USER_BIRTHDAY\": {\n      let newBirthdayState = { ...state.usersBirthday };\n      const monthName2 = getMonth(action.user.dob);\n      newBirthdayState[monthName2] = newBirthdayState[monthName2].filter(\n        (u) => u.id !== action.user.id\n      );\n      return {\n        ...state,\n        usersBirthday: newBirthdayState,\n      };\n    }\n  }\n  return state;\n};\n","import { createStore, Action, combineReducers, applyMiddleware } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { usersReducer } from \"./userReducer\";\nimport { birthdayReducer } from \"./birthdayReducer\";\n\nlet reducers = combineReducers({\n  users: usersReducer,\n  usersBirthday: birthdayReducer,\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store;\n\n// ______type of state___________\n\ntype RootReducerType = typeof reducers;\nexport type AppStateType = ReturnType<RootReducerType>;\n\n// ______type of actions___________\n\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\nexport type InferActionsTypes<\n  T extends { [key: string]: (...args: any[]) => any }\n> = ReturnType<PropertiesType<T>>;\n\n// ______type of thunk-creator___________\n\nexport type baseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\n  R,\n  AppStateType,\n  unknown,\n  A\n>;\n","import axios from \"axios\";\nimport { IUser } from \"../resux-state/userReducer\";\n\nconst dev = \"https://yalantis-react-school-api.yalantis.com/api/task0/users\";\n\nexport const instance = axios.create({\n  baseURL: dev,\n  headers: {\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"*\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n});\n\nexport const usersAPI = {\n  getUsers() {\n    return instance.get<Array<IUser>>(\"\").then((res) => {\n      return res.data;\n    });\n  },\n};\n","import { baseThunkType, InferActionsTypes } from \"./store\";\nimport { IUser } from \"./userReducer\";\nimport { usersAPI } from \"../requests/api\";\nimport { dataGenerator, Dictionary } from \"./dataGenerator\";\n\nexport type usersActionsType = InferActionsTypes<typeof usersActions>;\n\nexport const usersActions = {\n  getUsers: (users: Dictionary<Array<IUser>>) =>\n    ({ type: \"usersReducer/GET_USERS\", users } as const),\n  changeIsChecked: (letterBox: string, user: IUser) =>\n    ({\n      type: \"usersReducer/CHANGE_USER_IS_CHECKED\",\n      letterBox,\n      user,\n    } as const),\n};\n\n// //_________________ thunk-creators____________________\ntype thunkType = baseThunkType<usersActionsType>;\n\nexport const getUsers = (): thunkType => async (dispatch) => {\n  let result = await usersAPI.getUsers();\n  if (result) {\n    const dictionary = dataGenerator(result);\n    dispatch(usersActions.getUsers(dictionary));\n  }\n};\n","import React from \"react\";\nimport { IUser } from \"../../resux-state/userReducer\";\nimport styles from \"./employee.module.css\";\n\ninterface IProps {\n  user: IUser;\n  onChangeCheckBox: (user: IUser) => void;\n}\n\nexport const Employee: React.FC<IProps> = ({ user, onChangeCheckBox }) => {\n  const onChangeCheckBoxHandler = () => {\n    onChangeCheckBox(user);\n  };\n\n  return (\n    <div className={styles.employee_container}>\n      <div>\n        {user.lastName} {user.firstName}\n      </div>\n      <input\n        onChange={onChangeCheckBoxHandler}\n        type=\"checkbox\"\n        checked={user.isChecked}\n      />\n    </div>\n  );\n};\n","import { baseThunkType, InferActionsTypes } from \"./store\";\nimport { IUser } from \"./userReducer\";\nimport { dataMonthsGenerator, Dictionary } from \"./dataGenerator\";\n\nexport type usersBirthdayActionsType = InferActionsTypes<\n  typeof usersBirthdayActions\n>;\n\nexport const usersBirthdayActions = {\n  getUsersBirthday: (usersBirthday: Dictionary<Array<IUser>>) =>\n    ({\n      type: \"usersBirthdayReducer/GET_MONTH\",\n      usersBirthday,\n    } as const),\n  setUserBirthday: (user: IUser) =>\n    ({\n      type: \"usersBirthdayReducer/SET_USER_BIRTHDAY\",\n      user,\n    } as const),\n  removeUserBirthday: (user: IUser) =>\n    ({\n      type: \"usersBirthdayReducer/REMOVE_USER_BIRTHDAY\",\n      user,\n    } as const),\n};\n\n// //_________________ thunk-creators____________________\ntype thunkType = baseThunkType<usersBirthdayActionsType>;\n\nexport const getUsersBirthday = (): thunkType => async (dispatch) => {\n  const dictionary = dataMonthsGenerator();\n  dispatch(usersBirthdayActions.getUsersBirthday(dictionary));\n};\n","import React from \"react\";\nimport { IUser } from \"../../resux-state/userReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { Employee } from \"./Employee\";\nimport styles from \"./employee.module.css\";\nimport { usersActions } from \"../../resux-state/userActions\";\nimport { usersBirthdayActions } from \"../../resux-state/birthdayActions\";\n\ninterface IProps {\n  userBox: {\n    boxName: string;\n    users: Array<IUser>;\n  };\n}\n\nexport const Employees: React.FC<IProps> = ({ userBox }) => {\n  const dispatch = useDispatch();\n\n  const onChangeCheckBox = (user: IUser) => {\n    if (user.isChecked) {\n      dispatch(usersActions.changeIsChecked(userBox.boxName, user));\n      dispatch(usersBirthdayActions.removeUserBirthday(user));\n    } else {\n      dispatch(usersActions.changeIsChecked(userBox.boxName, user));\n      dispatch(usersBirthdayActions.setUserBirthday(user));\n    }\n  };\n  return (\n    <div className={styles.employees_container}>\n      <div style={{ fontWeight: \"bold\", backgroundColor: \"#ACE5FF\" }}>\n        {userBox.boxName}\n      </div>\n      {userBox.users.length === 0 ? (\n        <div>-----</div>\n      ) : (\n        userBox.users.map((y) => (\n          <Employee user={y} onChangeCheckBox={onChangeCheckBox} key={y.id} />\n        ))\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../resux-state/store\";\nimport styles from \"./employee.module.css\";\nimport { Employees } from \"./Employees\";\n\nexport const EmployeesContainer = () => {\n  const { users } = useSelector((store: AppStateType) => store);\n\n  return (\n    <div className={styles.employees_wrapper}>\n      <div className={styles.head_style}>Employees</div>\n      <div className={styles.basic_container} style={{ display: \"flex\" }}>\n        {Object.entries(users.users).map((x) => (\n          <Employees userBox={{ boxName: x[0], users: x[1] }} key={x[0]} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getMonth } from \"../../resux-state/dataGenerator\";\nimport { IUser } from \"../../resux-state/userReducer\";\n\ninterface IProps {\n  user: IUser;\n}\n\nexport const EmployeeBirthday: React.FC<IProps> = ({ user }) => {\n  const year = user.dob.slice(0, 4);\n  const month = getMonth(user.dob);\n  const date = user.dob.slice(8, 10);\n\n  const dateOfBirth = `${date} ${month}, ${year} year`;\n\n  return (\n    <li style={{ width: \"100%\", padding: \"1% 0\" }}>\n      {user.lastName} {user.lastName} - {dateOfBirth}\n    </li>\n  );\n};\n","import React from \"react\";\nimport styles from \"./employeesBirthday.module.css\";\nimport { EmployeeBirthday } from \"./EmployeeBirthday\";\nimport { IUser } from \"../../resux-state/userReducer\";\n\ninterface IProps {\n  monthName: string;\n  users: Array<IUser>;\n}\n\nexport const EmployeesBirthday: React.FC<IProps> = ({ monthName, users }) => {\n  return (\n    <div className={styles.month_box}>\n      <div style={{ fontWeight: \"bold\" }}>{monthName}</div>\n      <div className={styles.birthday_box}>\n        {users.map((y) => (\n          <EmployeeBirthday user={y} key={y.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"../Employees/employee.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../resux-state/store\";\nimport { EmployeesBirthday } from \"./EmployeesBirthday\";\n\nexport const EmployeesBirthdayContainer = () => {\n  const { usersBirthday } = useSelector((store: AppStateType) => store);\n\n  const setEmpl = Object.entries(usersBirthday.usersBirthday).find(\n    (x) => x[1].length > 0\n  );\n\n  return (\n    <>\n      <div className={styles.employees_wrapper}>\n        <div className={styles.head_style}>Employees birthday</div>\n        {setEmpl ? (\n          <div className={styles.basic_container} style={{ display: \"flex\" }}>\n            {Object.entries(usersBirthday.usersBirthday).map((x) => {\n              if (x[1].length > 0) {\n                return (\n                  <EmployeesBirthday monthName={x[0]} users={x[1]} key={x[0]} />\n                );\n              }\n            })}\n          </div>\n        ) : (\n          <div style={{ color: \"red\", fontSize: \"1.4rem\" }}>\n            No selected employees\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport store from \"./resux-state/store\";\nimport { getUsers } from \"./resux-state/userActions\";\nimport { EmployeesContainer } from \"./components/Employees/EmployeesContainer\";\nimport { getUsersBirthday } from \"./resux-state/birthdayActions\";\nimport { EmployeesBirthdayContainer } from \"./components/EmployeesBirthday/EmployeesBirthdayContainer\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n    dispatch(getUsersBirthday());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <EmployeesContainer />\n      <EmployeesBirthdayContainer />\n    </div>\n  );\n}\n\nexport function AppGlobal() {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <div className=\"App_container\">\n          <App />\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { AppGlobal } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppGlobal />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employees_wrapper\":\"employee_employees_wrapper__1FKie\",\"basic_container\":\"employee_basic_container__373On\",\"employees_container\":\"employee_employees_container__2IzeT\",\"employee_container\":\"employee_employee_container__1FScO\",\"head_style\":\"employee_head_style__12eP0\"};"],"sourceRoot":""}